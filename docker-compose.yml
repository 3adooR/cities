version: '3'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

services:

  web:
    container_name: "${APP_NAME}_web"
    image: nginx:alpine
    volumes:
      - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./:/var/www/${APP_NAME}"
      - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
    ports:
      - "80:80"
      - "3000:443"
    environment:
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_ROOT="/var/www/${APP_NAME}/public"
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && envsubst '$$NGINX_ROOT' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - php
    networks:
      - frontend
      - backend

  php:
    container_name: "${APP_NAME}_php"
    image: bitnami/php-fpm:${PHP_VERSION}
    working_dir: /var/www/${APP_NAME}
    volumes:
      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "./:/var/www/${APP_NAME}"
    networks:
      - backend

  mysql:
    container_name: "${APP_NAME}_mysql"
    image: mysql:${MYSQL_VERSION}
    env_file:
      - ".env"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
        - "./etc/db/init.sql:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - "3306:3306"
    networks:
      - backend

  redis:
    container_name: "${APP_NAME}_redis"
    image: redis:latest
    volumes:
      - "./etc/redis/redis.conf:/usr/local/etc/redis/redis.conf"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6380:6379"
    networks:
      - backend
